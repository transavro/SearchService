// Code generated by protoc-gen-go. DO NOT EDIT.
// source: CDEService.proto

package cloudwalker

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TileType int32

const (
	TileType_ImageTile     TileType = 0
	TileType_VideoTile     TileType = 1
	TileType_FeatureTile   TileType = 2
	TileType_AdvertiseTile TileType = 3
	TileType_CarouselTile  TileType = 4
)

var TileType_name = map[int32]string{
	0: "ImageTile",
	1: "VideoTile",
	2: "FeatureTile",
	3: "AdvertiseTile",
	4: "CarouselTile",
}

var TileType_value = map[string]int32{
	"ImageTile":     0,
	"VideoTile":     1,
	"FeatureTile":   2,
	"AdvertiseTile": 3,
	"CarouselTile":  4,
}

func (x TileType) String() string {
	return proto.EnumName(TileType_name, int32(x))
}

func (TileType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b71e49cbfefc313f, []int{0}
}

type Monetize int32

const (
	Monetize_Free         Monetize = 0
	Monetize_Paid         Monetize = 1
	Monetize_Subscription Monetize = 2
	Monetize_Rent         Monetize = 3
)

var Monetize_name = map[int32]string{
	0: "Free",
	1: "Paid",
	2: "Subscription",
	3: "Rent",
}

var Monetize_value = map[string]int32{
	"Free":         0,
	"Paid":         1,
	"Subscription": 2,
	"Rent":         3,
}

func (x Monetize) String() string {
	return proto.EnumName(Monetize_name, int32(x))
}

func (Monetize) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b71e49cbfefc313f, []int{1}
}

type SearchQuery struct {
	Query                string   `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchQuery) Reset()         { *m = SearchQuery{} }
func (m *SearchQuery) String() string { return proto.CompactTextString(m) }
func (*SearchQuery) ProtoMessage()    {}
func (*SearchQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_b71e49cbfefc313f, []int{0}
}

func (m *SearchQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchQuery.Unmarshal(m, b)
}
func (m *SearchQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchQuery.Marshal(b, m, deterministic)
}
func (m *SearchQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchQuery.Merge(m, src)
}
func (m *SearchQuery) XXX_Size() int {
	return xxx_messageInfo_SearchQuery.Size(m)
}
func (m *SearchQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchQuery.DiscardUnknown(m)
}

var xxx_messageInfo_SearchQuery proto.InternalMessageInfo

func (m *SearchQuery) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

type SearchResponse struct {
	ContentTile          []*Content `protobuf:"bytes,1,rep,name=contentTile,proto3" json:"contentTile,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SearchResponse) Reset()         { *m = SearchResponse{} }
func (m *SearchResponse) String() string { return proto.CompactTextString(m) }
func (*SearchResponse) ProtoMessage()    {}
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b71e49cbfefc313f, []int{1}
}

func (m *SearchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchResponse.Unmarshal(m, b)
}
func (m *SearchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchResponse.Marshal(b, m, deterministic)
}
func (m *SearchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchResponse.Merge(m, src)
}
func (m *SearchResponse) XXX_Size() int {
	return xxx_messageInfo_SearchResponse.Size(m)
}
func (m *SearchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchResponse proto.InternalMessageInfo

func (m *SearchResponse) GetContentTile() []*Content {
	if m != nil {
		return m.ContentTile
	}
	return nil
}

type SearchTextResponse struct {
	Result               []string `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchTextResponse) Reset()         { *m = SearchTextResponse{} }
func (m *SearchTextResponse) String() string { return proto.CompactTextString(m) }
func (*SearchTextResponse) ProtoMessage()    {}
func (*SearchTextResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b71e49cbfefc313f, []int{2}
}

func (m *SearchTextResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchTextResponse.Unmarshal(m, b)
}
func (m *SearchTextResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchTextResponse.Marshal(b, m, deterministic)
}
func (m *SearchTextResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchTextResponse.Merge(m, src)
}
func (m *SearchTextResponse) XXX_Size() int {
	return xxx_messageInfo_SearchTextResponse.Size(m)
}
func (m *SearchTextResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchTextResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchTextResponse proto.InternalMessageInfo

func (m *SearchTextResponse) GetResult() []string {
	if m != nil {
		return m.Result
	}
	return nil
}

// new schema
type Content struct {
	Title                string   `protobuf:"bytes,8,opt,name=title,proto3" json:"title,omitempty"`
	Poster               []string `protobuf:"bytes,1,rep,name=poster,proto3" json:"poster,omitempty"`
	Portriat             []string `protobuf:"bytes,2,rep,name=portriat,proto3" json:"portriat,omitempty"`
	Type                 TileType `protobuf:"varint,3,opt,name=type,proto3,enum=cloudwalker.TileType" json:"type,omitempty"`
	IsDetailPage         bool     `protobuf:"varint,4,opt,name=isDetailPage,proto3" json:"isDetailPage,omitempty"`
	ContentId            string   `protobuf:"bytes,5,opt,name=contentId,proto3" json:"contentId,omitempty"`
	Play                 []*Play  `protobuf:"bytes,6,rep,name=play,proto3" json:"play,omitempty"`
	Video                []string `protobuf:"bytes,7,rep,name=video,proto3" json:"video,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Content) Reset()         { *m = Content{} }
func (m *Content) String() string { return proto.CompactTextString(m) }
func (*Content) ProtoMessage()    {}
func (*Content) Descriptor() ([]byte, []int) {
	return fileDescriptor_b71e49cbfefc313f, []int{3}
}

func (m *Content) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Content.Unmarshal(m, b)
}
func (m *Content) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Content.Marshal(b, m, deterministic)
}
func (m *Content) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Content.Merge(m, src)
}
func (m *Content) XXX_Size() int {
	return xxx_messageInfo_Content.Size(m)
}
func (m *Content) XXX_DiscardUnknown() {
	xxx_messageInfo_Content.DiscardUnknown(m)
}

var xxx_messageInfo_Content proto.InternalMessageInfo

func (m *Content) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Content) GetPoster() []string {
	if m != nil {
		return m.Poster
	}
	return nil
}

func (m *Content) GetPortriat() []string {
	if m != nil {
		return m.Portriat
	}
	return nil
}

func (m *Content) GetType() TileType {
	if m != nil {
		return m.Type
	}
	return TileType_ImageTile
}

func (m *Content) GetIsDetailPage() bool {
	if m != nil {
		return m.IsDetailPage
	}
	return false
}

func (m *Content) GetContentId() string {
	if m != nil {
		return m.ContentId
	}
	return ""
}

func (m *Content) GetPlay() []*Play {
	if m != nil {
		return m.Play
	}
	return nil
}

func (m *Content) GetVideo() []string {
	if m != nil {
		return m.Video
	}
	return nil
}

type Play struct {
	Monetize             Monetize `protobuf:"varint,5,opt,name=monetize,proto3,enum=cloudwalker.Monetize" json:"monetize,omitempty"`
	Target               string   `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	Source               string   `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	Package              string   `protobuf:"bytes,3,opt,name=package,proto3" json:"package,omitempty"`
	Type                 string   `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Play) Reset()         { *m = Play{} }
func (m *Play) String() string { return proto.CompactTextString(m) }
func (*Play) ProtoMessage()    {}
func (*Play) Descriptor() ([]byte, []int) {
	return fileDescriptor_b71e49cbfefc313f, []int{4}
}

func (m *Play) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Play.Unmarshal(m, b)
}
func (m *Play) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Play.Marshal(b, m, deterministic)
}
func (m *Play) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Play.Merge(m, src)
}
func (m *Play) XXX_Size() int {
	return xxx_messageInfo_Play.Size(m)
}
func (m *Play) XXX_DiscardUnknown() {
	xxx_messageInfo_Play.DiscardUnknown(m)
}

var xxx_messageInfo_Play proto.InternalMessageInfo

func (m *Play) GetMonetize() Monetize {
	if m != nil {
		return m.Monetize
	}
	return Monetize_Free
}

func (m *Play) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *Play) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *Play) GetPackage() string {
	if m != nil {
		return m.Package
	}
	return ""
}

func (m *Play) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func init() {
	proto.RegisterEnum("cloudwalker.TileType", TileType_name, TileType_value)
	proto.RegisterEnum("cloudwalker.Monetize", Monetize_name, Monetize_value)
	proto.RegisterType((*SearchQuery)(nil), "cloudwalker.SearchQuery")
	proto.RegisterType((*SearchResponse)(nil), "cloudwalker.SearchResponse")
	proto.RegisterType((*SearchTextResponse)(nil), "cloudwalker.SearchTextResponse")
	proto.RegisterType((*Content)(nil), "cloudwalker.Content")
	proto.RegisterType((*Play)(nil), "cloudwalker.Play")
}

func init() {
	proto.RegisterFile("CDEService.proto", fileDescriptor_b71e49cbfefc313f)
}

var fileDescriptor_b71e49cbfefc313f = []byte{
	// 584 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x53, 0x41, 0x6f, 0xd3, 0x4c,
	0x10, 0xfd, 0x36, 0x71, 0x13, 0x67, 0x92, 0xf6, 0x73, 0x47, 0xa5, 0x5a, 0x95, 0x4a, 0x44, 0x46,
	0x48, 0x21, 0x42, 0x2d, 0x14, 0x89, 0x43, 0x6e, 0xa8, 0xa5, 0xa2, 0x07, 0xa4, 0xe2, 0x54, 0x1c,
	0x38, 0x80, 0xb6, 0xce, 0x28, 0xac, 0xea, 0x7a, 0xcd, 0x7a, 0x5d, 0x1a, 0x8e, 0xfc, 0x05, 0x0e,
	0xdc, 0xf8, 0x53, 0xfc, 0x05, 0xfe, 0x06, 0x12, 0xda, 0x5d, 0xa7, 0x4d, 0x50, 0xd4, 0x9b, 0xdf,
	0x7b, 0xb3, 0x6f, 0xdf, 0x8e, 0x67, 0x20, 0x3a, 0x3c, 0x7a, 0x35, 0x26, 0x7d, 0x25, 0x53, 0xda,
	0x2b, 0xb4, 0x32, 0x0a, 0xbb, 0x69, 0xa6, 0xaa, 0xc9, 0x17, 0x91, 0x5d, 0x90, 0xde, 0xd9, 0x9d,
	0x2a, 0x35, 0xcd, 0x68, 0x5f, 0x14, 0x72, 0x5f, 0xe4, 0xb9, 0x32, 0xc2, 0x48, 0x95, 0x97, 0xbe,
	0x34, 0x7e, 0x08, 0xdd, 0x31, 0x09, 0x9d, 0x7e, 0x7a, 0x5b, 0x91, 0x9e, 0xe1, 0x16, 0xac, 0x7d,
	0xb6, 0x1f, 0x9c, 0xf5, 0xd9, 0xa0, 0x93, 0x78, 0x10, 0xbf, 0x86, 0x0d, 0x5f, 0x94, 0x50, 0x59,
	0xa8, 0xbc, 0x24, 0x7c, 0x01, 0xdd, 0x54, 0xe5, 0x86, 0x72, 0x73, 0x26, 0x33, 0xe2, 0xac, 0xdf,
	0x1c, 0x74, 0x0f, 0xb6, 0xf6, 0x16, 0xee, 0xdd, 0x3b, 0xf4, 0x7a, 0xb2, 0x58, 0x18, 0x3f, 0x01,
	0xf4, 0x4e, 0x67, 0x74, 0x6d, 0x6e, 0xdc, 0xb6, 0xa1, 0xa5, 0xa9, 0xac, 0x32, 0xe3, 0x8c, 0x3a,
	0x49, 0x8d, 0xe2, 0x3f, 0x0c, 0xda, 0xb5, 0x8d, 0x4d, 0x66, 0xa4, 0xc9, 0x88, 0x87, 0x3e, 0x99,
	0x03, 0xf6, 0x64, 0xa1, 0x4a, 0x43, 0x7a, 0x7e, 0xd2, 0x23, 0xdc, 0x81, 0xb0, 0x50, 0xda, 0x68,
	0x29, 0x0c, 0x6f, 0x38, 0xe5, 0x06, 0xe3, 0x63, 0x08, 0xcc, 0xac, 0x20, 0xde, 0xec, 0xb3, 0xc1,
	0xc6, 0xc1, 0xbd, 0xa5, 0xd0, 0x36, 0xe4, 0xd9, 0xac, 0xa0, 0xc4, 0x95, 0x60, 0x0c, 0x3d, 0x59,
	0x1e, 0x91, 0x11, 0x32, 0x3b, 0x15, 0x53, 0xe2, 0x41, 0x9f, 0x0d, 0xc2, 0x64, 0x89, 0xc3, 0x5d,
	0xe8, 0xd4, 0x2f, 0x3c, 0x99, 0xf0, 0x35, 0x17, 0xee, 0x96, 0xc0, 0x47, 0x10, 0x14, 0x99, 0x98,
	0xf1, 0x96, 0xeb, 0xd0, 0xe6, 0xd2, 0x65, 0xa7, 0x99, 0x98, 0x25, 0x4e, 0xb6, 0xaf, 0xbb, 0x92,
	0x13, 0x52, 0xbc, 0xed, 0xc2, 0x7a, 0x10, 0xff, 0x60, 0x10, 0xd8, 0x22, 0x7c, 0x06, 0xe1, 0xa5,
	0xca, 0xc9, 0xc8, 0xaf, 0xe4, 0xae, 0xf8, 0x37, 0xf6, 0x9b, 0x5a, 0x4c, 0x6e, 0xca, 0x6c, 0x67,
	0x8c, 0xd0, 0x53, 0x32, 0xf5, 0xaf, 0xac, 0x91, 0xe5, 0x4b, 0x55, 0xe9, 0x94, 0x78, 0xc3, 0xf3,
	0x1e, 0x21, 0x87, 0x76, 0x21, 0xd2, 0x0b, 0xfb, 0xca, 0xa6, 0x13, 0xe6, 0x10, 0xb1, 0xee, 0x57,
	0xe0, 0x68, 0xf7, 0x3d, 0xfc, 0x00, 0xe1, 0xbc, 0x55, 0xb8, 0x0e, 0x9d, 0x93, 0x4b, 0x31, 0x25,
	0x4b, 0x44, 0xff, 0x59, 0xf8, 0xce, 0xa6, 0x77, 0x90, 0xe1, 0xff, 0xd0, 0x3d, 0x26, 0x61, 0x2a,
	0xed, 0xf5, 0x06, 0x6e, 0xc2, 0xfa, 0xcb, 0xc9, 0x15, 0x69, 0x23, 0x4b, 0x4f, 0x35, 0x31, 0x82,
	0xde, 0xa1, 0xd0, 0xaa, 0x2a, 0x29, 0x73, 0x4c, 0x30, 0x1c, 0x41, 0x38, 0x7f, 0x13, 0x86, 0x10,
	0x1c, 0x6b, 0xb2, 0xd6, 0x21, 0x04, 0xa7, 0x42, 0x4e, 0x22, 0x66, 0x4f, 0x8c, 0xab, 0xf3, 0x32,
	0xd5, 0xb2, 0xb0, 0xd3, 0x1c, 0x35, 0xac, 0x96, 0x50, 0x6e, 0xa2, 0xe6, 0xc1, 0xcf, 0x06, 0xc0,
	0xed, 0x4a, 0xe0, 0x7b, 0xe8, 0xf9, 0x91, 0x1b, 0x1b, 0x4d, 0xe2, 0x12, 0xf9, 0x52, 0xe7, 0x16,
	0x86, 0x7f, 0x67, 0xe5, 0xfc, 0xc6, 0xfc, 0xdb, 0xaf, 0xdf, 0xdf, 0x1b, 0x18, 0xaf, 0xef, 0x97,
	0x0b, 0x36, 0x23, 0x36, 0x7c, 0xca, 0x70, 0x0c, 0x2d, 0x6f, 0x70, 0x87, 0xeb, 0xfd, 0x15, 0xca,
	0x7c, 0xf2, 0x63, 0x74, 0xe6, 0xbd, 0xb8, 0x5d, 0x9b, 0x8f, 0xd8, 0x10, 0x3f, 0x02, 0xdc, 0xee,
	0xc8, 0x1d, 0xc6, 0x0f, 0x56, 0x28, 0x8b, 0x6b, 0x15, 0x6f, 0x3b, 0xf3, 0x28, 0xee, 0xd6, 0xe6,
	0x86, 0xae, 0xcd, 0x88, 0x0d, 0xcf, 0x5b, 0x6e, 0xf5, 0x9f, 0xff, 0x0d, 0x00, 0x00, 0xff, 0xff,
	0xed, 0x63, 0x0b, 0x3b, 0x39, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CDEServiceClient is the client API for CDEService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CDEServiceClient interface {
	SearchStream(ctx context.Context, in *SearchQuery, opts ...grpc.CallOption) (CDEService_SearchStreamClient, error)
	Search(ctx context.Context, in *SearchQuery, opts ...grpc.CallOption) (*SearchResponse, error)
	SearchText(ctx context.Context, in *SearchQuery, opts ...grpc.CallOption) (*SearchTextResponse, error)
}

type cDEServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCDEServiceClient(cc grpc.ClientConnInterface) CDEServiceClient {
	return &cDEServiceClient{cc}
}

func (c *cDEServiceClient) SearchStream(ctx context.Context, in *SearchQuery, opts ...grpc.CallOption) (CDEService_SearchStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CDEService_serviceDesc.Streams[0], "/cloudwalker.CDEService/SearchStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &cDEServiceSearchStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CDEService_SearchStreamClient interface {
	Recv() (*Content, error)
	grpc.ClientStream
}

type cDEServiceSearchStreamClient struct {
	grpc.ClientStream
}

func (x *cDEServiceSearchStreamClient) Recv() (*Content, error) {
	m := new(Content)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *cDEServiceClient) Search(ctx context.Context, in *SearchQuery, opts ...grpc.CallOption) (*SearchResponse, error) {
	out := new(SearchResponse)
	err := c.cc.Invoke(ctx, "/cloudwalker.CDEService/Search", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cDEServiceClient) SearchText(ctx context.Context, in *SearchQuery, opts ...grpc.CallOption) (*SearchTextResponse, error) {
	out := new(SearchTextResponse)
	err := c.cc.Invoke(ctx, "/cloudwalker.CDEService/SearchText", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CDEServiceServer is the server API for CDEService service.
type CDEServiceServer interface {
	SearchStream(*SearchQuery, CDEService_SearchStreamServer) error
	Search(context.Context, *SearchQuery) (*SearchResponse, error)
	SearchText(context.Context, *SearchQuery) (*SearchTextResponse, error)
}

// UnimplementedCDEServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCDEServiceServer struct {
}

func (*UnimplementedCDEServiceServer) SearchStream(req *SearchQuery, srv CDEService_SearchStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method SearchStream not implemented")
}
func (*UnimplementedCDEServiceServer) Search(ctx context.Context, req *SearchQuery) (*SearchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Search not implemented")
}
func (*UnimplementedCDEServiceServer) SearchText(ctx context.Context, req *SearchQuery) (*SearchTextResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchText not implemented")
}

func RegisterCDEServiceServer(s *grpc.Server, srv CDEServiceServer) {
	s.RegisterService(&_CDEService_serviceDesc, srv)
}

func _CDEService_SearchStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SearchQuery)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CDEServiceServer).SearchStream(m, &cDEServiceSearchStreamServer{stream})
}

type CDEService_SearchStreamServer interface {
	Send(*Content) error
	grpc.ServerStream
}

type cDEServiceSearchStreamServer struct {
	grpc.ServerStream
}

func (x *cDEServiceSearchStreamServer) Send(m *Content) error {
	return x.ServerStream.SendMsg(m)
}

func _CDEService_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CDEServiceServer).Search(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloudwalker.CDEService/Search",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CDEServiceServer).Search(ctx, req.(*SearchQuery))
	}
	return interceptor(ctx, in, info, handler)
}

func _CDEService_SearchText_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CDEServiceServer).SearchText(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloudwalker.CDEService/SearchText",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CDEServiceServer).SearchText(ctx, req.(*SearchQuery))
	}
	return interceptor(ctx, in, info, handler)
}

var _CDEService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cloudwalker.CDEService",
	HandlerType: (*CDEServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Search",
			Handler:    _CDEService_Search_Handler,
		},
		{
			MethodName: "SearchText",
			Handler:    _CDEService_SearchText_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SearchStream",
			Handler:       _CDEService_SearchStream_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "CDEService.proto",
}
